"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/micromark-extension-gfm-strikethrough";
exports.ids = ["vendor-chunks/micromark-extension-gfm-strikethrough"];
exports.modules = {

/***/ "(ssr)/./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js":
/*!****************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gfmStrikethroughHtml: () => (/* binding */ gfmStrikethroughHtml)\n/* harmony export */ });\n/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */ // To do: next major: expose function instead of object.\n/**\n * Extension for `micromark` that can be passed in `htmlExtensions`, to\n * support GFM strikethrough when serializing to HTML.\n *\n * @type {HtmlExtension}\n */ const gfmStrikethroughHtml = {\n    enter: {\n        strikethrough () {\n            this.tag(\"<del>\");\n        }\n    },\n    exit: {\n        strikethrough () {\n            this.tag(\"</del>\");\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tc3RyaWtldGhyb3VnaC9kZXYvbGliL2h0bWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBRUQsd0RBQXdEO0FBRXhEOzs7OztDQUtDLEdBQ00sTUFBTUEsdUJBQXVCO0lBQ2xDQyxPQUFPO1FBQ0xDO1lBQ0UsSUFBSSxDQUFDQyxHQUFHLENBQUM7UUFDWDtJQUNGO0lBQ0FDLE1BQU07UUFDSkY7WUFDRSxJQUFJLENBQUNDLEdBQUcsQ0FBQztRQUNYO0lBQ0Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdjAgY2xvbmUgd2l0aCBjb3BpbG90a2l0LCBuZXh0LmpzLCBhbmQgb3BlbmFpIGdwdDQvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tc3RyaWtldGhyb3VnaC9kZXYvbGliL2h0bWwuanM/ZGQ2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSHRtbEV4dGVuc2lvbn0gSHRtbEV4dGVuc2lvblxuICovXG5cbi8vIFRvIGRvOiBuZXh0IG1ham9yOiBleHBvc2UgZnVuY3Rpb24gaW5zdGVhZCBvZiBvYmplY3QuXG5cbi8qKlxuICogRXh0ZW5zaW9uIGZvciBgbWljcm9tYXJrYCB0aGF0IGNhbiBiZSBwYXNzZWQgaW4gYGh0bWxFeHRlbnNpb25zYCwgdG9cbiAqIHN1cHBvcnQgR0ZNIHN0cmlrZXRocm91Z2ggd2hlbiBzZXJpYWxpemluZyB0byBIVE1MLlxuICpcbiAqIEB0eXBlIHtIdG1sRXh0ZW5zaW9ufVxuICovXG5leHBvcnQgY29uc3QgZ2ZtU3RyaWtldGhyb3VnaEh0bWwgPSB7XG4gIGVudGVyOiB7XG4gICAgc3RyaWtldGhyb3VnaCgpIHtcbiAgICAgIHRoaXMudGFnKCc8ZGVsPicpXG4gICAgfVxuICB9LFxuICBleGl0OiB7XG4gICAgc3RyaWtldGhyb3VnaCgpIHtcbiAgICAgIHRoaXMudGFnKCc8L2RlbD4nKVxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbImdmbVN0cmlrZXRocm91Z2hIdG1sIiwiZW50ZXIiLCJzdHJpa2V0aHJvdWdoIiwidGFnIiwiZXhpdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js":
/*!******************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gfmStrikethrough: () => (/* binding */ gfmStrikethrough)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(ssr)/./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"(ssr)/./node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-classify-character */ \"(ssr)/./node_modules/micromark-util-classify-character/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-resolve-all */ \"(ssr)/./node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(ssr)/./node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(ssr)/./node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(ssr)/./node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */ \n\n\n\n\n\n\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */ function gfmStrikethrough(options) {\n    const options_ = options || {};\n    let single = options_.singleTilde;\n    const tokenizer = {\n        tokenize: tokenizeStrikethrough,\n        resolveAll: resolveAllStrikethrough\n    };\n    if (single === null || single === undefined) {\n        single = true;\n    }\n    return {\n        text: {\n            [micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde]: tokenizer\n        },\n        insideSpan: {\n            null: [\n                tokenizer\n            ]\n        },\n        attentionMarkers: {\n            null: [\n                micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde\n            ]\n        }\n    };\n    /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */ function resolveAllStrikethrough(events, context) {\n        let index = -1;\n        // Walk through all events.\n        while(++index < events.length){\n            // Find a token that can close.\n            if (events[index][0] === \"enter\" && events[index][1].type === \"strikethroughSequenceTemporary\" && events[index][1]._close) {\n                let open = index;\n                // Now walk back to find an opener.\n                while(open--){\n                    // Find a token that can open the closer.\n                    if (events[open][0] === \"exit\" && events[open][1].type === \"strikethroughSequenceTemporary\" && events[open][1]._open && // If the sizes are the same:\n                    events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n                        events[index][1].type = \"strikethroughSequence\";\n                        events[open][1].type = \"strikethroughSequence\";\n                        /** @type {Token} */ const strikethrough = {\n                            type: \"strikethrough\",\n                            start: Object.assign({}, events[open][1].start),\n                            end: Object.assign({}, events[index][1].end)\n                        };\n                        /** @type {Token} */ const text = {\n                            type: \"strikethroughText\",\n                            start: Object.assign({}, events[open][1].end),\n                            end: Object.assign({}, events[index][1].start)\n                        };\n                        // Opening.\n                        /** @type {Array<Event>} */ const nextEvents = [\n                            [\n                                \"enter\",\n                                strikethrough,\n                                context\n                            ],\n                            [\n                                \"enter\",\n                                events[open][1],\n                                context\n                            ],\n                            [\n                                \"exit\",\n                                events[open][1],\n                                context\n                            ],\n                            [\n                                \"enter\",\n                                text,\n                                context\n                            ]\n                        ];\n                        const insideSpan = context.parser.constructs.insideSpan.null;\n                        if (insideSpan) {\n                            // Between.\n                            (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(nextEvents, nextEvents.length, 0, (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__.resolveAll)(insideSpan, events.slice(open + 1, index), context));\n                        }\n                        // Closing.\n                        (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(nextEvents, nextEvents.length, 0, [\n                            [\n                                \"exit\",\n                                text,\n                                context\n                            ],\n                            [\n                                \"enter\",\n                                events[index][1],\n                                context\n                            ],\n                            [\n                                \"exit\",\n                                events[index][1],\n                                context\n                            ],\n                            [\n                                \"exit\",\n                                strikethrough,\n                                context\n                            ]\n                        ]);\n                        (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, open - 1, index - open + 3, nextEvents);\n                        index = open + nextEvents.length - 2;\n                        break;\n                    }\n                }\n            }\n        }\n        index = -1;\n        while(++index < events.length){\n            if (events[index][1].type === \"strikethroughSequenceTemporary\") {\n                events[index][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.data;\n            }\n        }\n        return events;\n    }\n    /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */ function tokenizeStrikethrough(effects, ok, nok) {\n        const previous = this.previous;\n        const events = this.events;\n        let size = 0;\n        return start;\n        /** @type {State} */ function start(code) {\n            (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde, \"expected `~`\");\n            if (previous === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde && events[events.length - 1][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.characterEscape) {\n                return nok(code);\n            }\n            effects.enter(\"strikethroughSequenceTemporary\");\n            return more(code);\n        }\n        /** @type {State} */ function more(code) {\n            const before = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_5__.classifyCharacter)(previous);\n            if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde) {\n                // If this is the third marker, exit.\n                if (size > 1) return nok(code);\n                effects.consume(code);\n                size++;\n                return more;\n            }\n            if (size < 2 && !single) return nok(code);\n            const token = effects.exit(\"strikethroughSequenceTemporary\");\n            const after = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_5__.classifyCharacter)(code);\n            token._open = !after || after === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.attentionSideAfter && Boolean(before);\n            token._close = !before || before === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.attentionSideAfter && Boolean(after);\n            return ok(code);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js\n");

/***/ })

};
;